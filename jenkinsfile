pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                sh 'rm -rf flask-devops-test || true'
                sh 'git clone https://github.com/novactkd/flask-devops-test.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('flask-devops-test') {
                    sh 'docker build -t flask-devops-test .'
                }
            }
        }

        stage('Run Container') {
            steps {
                dir('flask-devops-test') {
                    sh 'docker rm -f flask-devops-app || true'
                    sh 'docker run -d -p 5000:5000 --name flask-devops-app flask-devops-test'
                    sh 'sleep 5'
                }
            }
        }

        stage('Test Application') {
            steps {
                script {
                    def response = sh(script: "curl -s -o /dev/null -w '%{http_code}' http://localhost:5000", returnStdout: true).trim()
                    if (response != '200') {
                        error("App failed health check. HTTP response code: ${response}")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up Docker container...'
            sh 'docker rm -f flask-devops-app || true'
        }
    }
}

